#!/usr/bin/env python3
# coding: utf-8


"""
Pentagon Numbers

Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers
are:
        1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not
pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
and D = |Pk - Pj| is minimised; what is the value of D?
"""


ANSWER = 5482660


def pentagonal(n: int) -> int:
    """
    Pentagonal number
    """
    return n * (3 * n - 1) // 2


def is_pentagonal(x: int) -> bool:
    """
    Check if x is a pentagonal number
    """
    if x <= 0:
        return False

    # x * (3 * n - 1) / 2 = x
    # => n1 = (sqrt(24 * x + 1) + 1) / 6
    # => n2 = - (sqrt(24 * x + 1) - 1) / 6, (n2 < 0, ignore)
    n = (24 * x + 1) ** 0.5
    return (n + 1) % 6 == 0


def solve_naive() -> int:
    j = 2
    while True:
        pj = pentagonal(j)
        k = 1
        while k < j:
            pk = pentagonal(k)
            if is_pentagonal(pj + pk) and is_pentagonal(pj - pk):
                return pj - pk

            k += 1

        j += 1
